import{A as a}from"../../../assets/js/orgaApi.c446033a.js";import{c as i}from"../../../assets/js/exports.d4f660e1.js";async function l(){return(await chrome.tabs.query({active:!0,currentWindow:!0}))[0].id}async function u(e,o){chrome?.identity||console.error("chrome.identity is not defined");const r=encodeURIComponent("https://"+chrome.runtime.id+".chromiumapp.org"),t="https://accounts.google.com/o/oauth2/v2/auth?nonce="+new Date().getMilliseconds()+"&client_id="+e+"&prompt=consent&response_type=code&access_type=offline&redirect_uri="+r+"&scope="+encodeURIComponent(o.join(" ")),n=await l();chrome.identity.launchWebAuthFlow({url:t,interactive:!0},function(c){if(c===void 0)throw new Error("after login redirect is undefined");if(chrome.runtime.lastError)console.log(chrome.runtime.lastError.message);else{const s=new URL(c).searchParams.get("code");chrome.tabs.sendMessage(n,{type:"setGoogleOauthCode",code:s})}})}chrome.runtime.onMessage.addListener((e,o,r)=>{if(e.type==="inboxsdk__injectPageWorld"&&o.tab){if(chrome.scripting)return chrome.scripting.executeScript({target:{tabId:o.tab.id},world:"MAIN",files:["pageWorld.js"]}),r(!0),!0;throw new Error("chrome.scripting is undefined, this means that scriptinjection is not supported on your browser")}});chrome.runtime.onInstalled.addListener(async function(e){const o=await a.getAccountsData();if(e.reason=="install"||o.length==0&&e.reason=="update"){const r="https://mail.google.com";chrome.tabs.create({url:r})}});const d=24*60*60*1e3;chrome.runtime.onUpdateAvailable.addListener(e=>{e&&chrome.storage.local.get("lastUpdate",o=>{const r=o.lastUpdate,t=new Date().getTime();if(!r||t-r>=d)try{chrome.runtime.reload(),chrome.storage.local.set({lastUpdate:t})}catch(n){console.error(n),i(n,{tags:{amplitude:"chrome_extension_updated"}})}else console.log("Maximum one update per day reached")})});chrome.runtime.onMessage.addListener(async(e,o,r)=>{if(e.type==="startIdentityOAuth"&&u("812360763396-2e6tbtj82r0t37kgnl7a2nvv2qnlvf57.apps.googleusercontent.com",["https://www.googleapis.com/auth/userinfo.email","https://www.googleapis.com/auth/userinfo.profile"]),e.type=="setAccount")try{const t=e.options.message;if(t.token){await a.createAccountEntry(t.email.toLowerCase());for(const n in t)await a.editAccountAttribute(t.email.toLowerCase(),n,t[n])}}catch(t){console.log(t)}return e.type=="setUser",!0});chrome.storage.onChanged.addListener((e,o)=>{for(let[r,{oldValue:t,newValue:n}]of Object.entries(e))console.log(`Account Storage key "${r}" in namespace "${o}" changed.`,`Account Old value was "${JSON.stringify(t)}", new value is "${JSON.stringify(n)}".`)});
//# sourceMappingURL=index.js.map
