{"version":3,"file":"index.js","sources":["../../../../../../front-lib/src/chrome/tabs.ts","../../../../../../front-lib/src/chrome/oauth.ts","../../../../../../apps/mailmerger-extension/src/pages/background/index.ts"],"sourcesContent":["export async function getCurrentTab(): Promise<number> {\n  const tabs = await chrome.tabs.query({active: true, currentWindow: true});\n  return tabs[0].id\n}\n","import {getCurrentTab} from \"./tabs\";\n\nexport async function startGoogleOAuth(clientId: string, scopes: Array<string>) {\n  if (!chrome?.identity) {\n    console.error(\"chrome.identity is not defined\")\n  }\n  const redirectUri = encodeURIComponent('https://' + chrome.runtime.id + '.chromiumapp.org');\n  const url = 'https://accounts.google.com/o/oauth2/v2/auth' +\n    '?nonce=' + new Date().getMilliseconds() +\n    '&client_id=' + clientId +\n    '&prompt=consent' +\n    '&response_type=code' +\n    '&access_type=offline' +\n    '&redirect_uri=' + redirectUri +\n    '&scope=' + encodeURIComponent(scopes.join(' '));\n\n  const currentTabId = await getCurrentTab()\n  chrome.identity.launchWebAuthFlow(\n    {\n      'url': url,\n      'interactive': true\n    },\n    function (redirectedTo?: string) {\n      if(redirectedTo === undefined){\n        throw new Error(\"after login redirect is undefined\")\n      }\n      if (chrome.runtime.lastError) {\n        // Example: Authorization page could not be loaded.\n        console.log(chrome.runtime.lastError.message);\n      } else {\n        const resUrl = new URL(redirectedTo)\n        const code = resUrl.searchParams.get(\"code\");\n        chrome.tabs.sendMessage(currentTabId, {\n          type: \"setGoogleOauthCode\", code\n        });\n      }\n    }\n  );\n}\n","import reloadOnUpdate from \"virtual:reload-on-update-in-background-script\";\nimport {Account, startGoogleOAuth} from \"@front-lib\";\nimport * as Sentry from \"@sentry/browser\";\n\nreloadOnUpdate(\"pages/background\");\n\n\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n  if (message.type === 'inboxsdk__injectPageWorld' && sender.tab) {\n    if (chrome.scripting) {\n      chrome.scripting.executeScript({ target: { tabId: sender.tab.id }, world: 'MAIN', files: ['pageWorld.js'] });\n      sendResponse(true);\n      return true\n    } else {\n      throw new Error('chrome.scripting is undefined, this means that scriptinjection is not supported on your browser');\n      return false\n    } }\n});\n\nchrome.runtime.onInstalled.addListener(async function (object) {\n  const accounts = await Account.getAccountsData()\n  if (object.reason == \"install\" || (accounts.length == 0 && object.reason == \"update\")) {\n    const url = \"https://mail.google.com\"\n    chrome.tabs.create({url});\n  }\n});\nconst ONE_DAY_IN_MILLISECONDS = 24 * 60 * 60 * 1000; // One day in milliseconds\n\nchrome.runtime.onUpdateAvailable.addListener(details => {\n  if (details) {\n    chrome.storage.local.get('lastUpdate', data => {\n      const lastUpdate = data.lastUpdate;\n      const currentDate = new Date().getTime();\n      if (!lastUpdate || currentDate - lastUpdate >= ONE_DAY_IN_MILLISECONDS) {\n        try {\n          chrome.runtime.reload();\n          chrome.storage.local.set({lastUpdate: currentDate});\n        } catch (e) {\n          console.error(e);\n          Sentry.captureException(e, {tags: {\"amplitude\": \"chrome_extension_updated\"}});\n        }\n      } else {\n        console.log('Maximum one update per day reached');\n      }\n    });\n  }\n});\n\nchrome.runtime.onMessage.addListener(async (message, sender, sendResponse) => {\n  if (message.type === 'startIdentityOAuth') {\n    startGoogleOAuth(\n      \"528210420932-aiipq5ntlkb77gtvqiatb3h2enuje161.apps.googleusercontent.com\",\n      [\"https://www.googleapis.com/auth/userinfo.email\", \"https://www.googleapis.com/auth/userinfo.profile\", \"https://www.googleapis.com/auth/gmail.send\"]\n    )\n  }\n  if (message.type == \"setAccount\") {\n    try {\n      const account = message.options.message;\n      console.log(\"setAccount\", account)\n      if (account.token) {\n        await Account.createAccountEntry(account.email.toLowerCase())\n        for (const key in account) {\n          await Account.editAccountAttribute(account.email.toLowerCase(), key, account[key]);\n        }\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n  if (message.type == \"setUser\") {\n\n    try {\n      const user = message.options.message;\n      console.log(\"setUser\", user)\n      const rules = [{\n        id: 2,\n        priority: 1,\n        action: {\n          type: \"block\" as any\n        },\n        condition: {\n          urlFilter: \"*pixel*user=\" + user.id + \"&end=1*\",\n          resourceTypes: [\"image\"]\n        }\n      }, {\n        id: 3,\n        priority: 1,\n        action: {\n          type: \"block\" as any\n        },\n        condition: {\n          urlFilter: \"*pixel*user=\" + user.id + \"&amp;end=1*\",\n          resourceTypes: [\"image\"]\n        }\n      }\n      ];\n\n      try {\n        await chrome.declarativeNetRequest.updateDynamicRules({removeRuleIds: [2, 3]});\n      } catch (e) {\n        console.log(e)\n      }\n      await chrome.declarativeNetRequest.updateDynamicRules({addRules: rules});\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  return true\n});\n\n\nchrome.storage.onChanged.addListener((changes, namespace) => {\n  for (let [key, {oldValue, newValue}] of Object.entries(changes)) {\n    console.log(\n      `Account Storage key \"${key}\" in namespace \"${namespace}\" changed.`,\n      `Account Old value was \"${JSON.stringify(oldValue)}\", new value is \"${JSON.stringify(newValue)}\".`\n    );\n  }\n});\n"],"names":["getCurrentTab","startGoogleOAuth","clientId","scopes","redirectUri","url","currentTabId","redirectedTo","code","chrome","runtime","onMessage","addListener","message","sender","sendResponse","type","tab","scripting","executeScript","target","tabId","id","world","files","Error","onInstalled","object","accounts","Account","getAccountsData","reason","length","tabs","create","ONE_DAY_IN_MILLISECONDS","onUpdateAvailable","details","storage","local","get","data","lastUpdate","currentDate","Date","getTime","reload","set","e","console","error","Sentry","tags","log","account","options","token","createAccountEntry","email","toLowerCase","key","editAccountAttribute","user","rules","priority","action","condition","urlFilter","resourceTypes","declarativeNetRequest","updateDynamicRules","removeRuleIds","addRules","onChanged","changes","namespace","oldValue","newValue","Object","entries","JSON","stringify"],"mappings":"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"}