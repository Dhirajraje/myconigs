import{A as s}from"../../../assets/js/orgaApi.30f0f501.js";import{c as a}from"../../../assets/js/exports.d4f660e1.js";async function l(){return(await chrome.tabs.query({active:!0,currentWindow:!0}))[0].id}async function u(t,o){chrome?.identity||console.error("chrome.identity is not defined");const r=encodeURIComponent("https://"+chrome.runtime.id+".chromiumapp.org"),e="https://accounts.google.com/o/oauth2/v2/auth?nonce="+new Date().getMilliseconds()+"&client_id="+t+"&prompt=consent&response_type=code&access_type=offline&redirect_uri="+r+"&scope="+encodeURIComponent(o.join(" ")),n=await l();chrome.identity.launchWebAuthFlow({url:e,interactive:!0},function(c){if(c===void 0)throw new Error("after login redirect is undefined");if(chrome.runtime.lastError)console.log(chrome.runtime.lastError.message);else{const i=new URL(c).searchParams.get("code");chrome.tabs.sendMessage(n,{type:"setGoogleOauthCode",code:i})}})}chrome.runtime.onMessage.addListener((t,o,r)=>{if(t.type==="inboxsdk__injectPageWorld"&&o.tab){if(chrome.scripting)return chrome.scripting.executeScript({target:{tabId:o.tab.id},world:"MAIN",files:["pageWorld.js"]}),r(!0),!0;throw new Error("chrome.scripting is undefined, this means that scriptinjection is not supported on your browser")}});chrome.runtime.onInstalled.addListener(async function(t){const o=await s.getAccountsData();if(t.reason=="install"||o.length==0&&t.reason=="update"){const r="https://mail.google.com";chrome.tabs.create({url:r})}});const d=24*60*60*1e3;chrome.runtime.onUpdateAvailable.addListener(t=>{t&&chrome.storage.local.get("lastUpdate",o=>{const r=o.lastUpdate,e=new Date().getTime();if(!r||e-r>=d)try{chrome.runtime.reload(),chrome.storage.local.set({lastUpdate:e})}catch(n){console.error(n),a(n,{tags:{amplitude:"chrome_extension_updated"}})}else console.log("Maximum one update per day reached")})});chrome.runtime.onMessage.addListener(async(t,o,r)=>{if(t.type==="startIdentityOAuth"&&u("528210420932-aiipq5ntlkb77gtvqiatb3h2enuje161.apps.googleusercontent.com",["https://www.googleapis.com/auth/userinfo.email","https://www.googleapis.com/auth/userinfo.profile","https://www.googleapis.com/auth/gmail.send"]),t.type=="setAccount")try{const e=t.options.message;if(console.log("setAccount",e),e.token){await s.createAccountEntry(e.email.toLowerCase());for(const n in e)await s.editAccountAttribute(e.email.toLowerCase(),n,e[n])}}catch(e){console.log(e)}if(t.type=="setUser")try{const e=t.options.message;console.log("setUser",e);const n=[{id:2,priority:1,action:{type:"block"},condition:{urlFilter:"*pixel*user="+e.id+"&end=1*",resourceTypes:["image"]}},{id:3,priority:1,action:{type:"block"},condition:{urlFilter:"*pixel*user="+e.id+"&amp;end=1*",resourceTypes:["image"]}}];try{await chrome.declarativeNetRequest.updateDynamicRules({removeRuleIds:[2,3]})}catch(c){console.log(c)}await chrome.declarativeNetRequest.updateDynamicRules({addRules:n})}catch(e){console.log(e)}return!0});chrome.storage.onChanged.addListener((t,o)=>{for(let[r,{oldValue:e,newValue:n}]of Object.entries(t))console.log(`Account Storage key "${r}" in namespace "${o}" changed.`,`Account Old value was "${JSON.stringify(e)}", new value is "${JSON.stringify(n)}".`)});
//# sourceMappingURL=index.js.map
