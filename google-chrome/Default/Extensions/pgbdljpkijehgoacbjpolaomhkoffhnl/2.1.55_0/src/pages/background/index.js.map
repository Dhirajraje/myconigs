{"version":3,"file":"index.js","sources":["../../../../../../apps/mailtracker-extension/src/pages/background/index.ts"],"sourcesContent":["// @ts-ignore\nimport reloadOnUpdate from \"virtual:reload-on-update-in-background-script\";\nimport {Account, isDevMode} from \"@front-lib\";\n\nreloadOnUpdate(\"pages/background\");\n\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    if (message.type === 'inboxsdk__injectPageWorld' && sender.tab) {\n        if (chrome.scripting) {\n            chrome.scripting.executeScript({ target: { tabId: sender.tab.id }, world: 'MAIN', files: ['pageWorld.js'] });\n            sendResponse(true);\n            return true\n        } else {\n            throw new Error('chrome.scripting is undefined, this means that scriptinjection is not supported on your browser');\n            return false\n        } }\n});\n\nchrome.runtime.onInstalled.addListener(async function (object) {\n    const accounts = await Account.getAccountsData()\n    if (object.reason == \"install\" || (accounts.length == 0 && object.reason == \"update\")) {\n        const isDev = isDevMode()\n        let url = \"https://app.getmailtracker.com/sign-in?utm_source=_mailtracker_chrome_extension&utm_medium=extension&utm_campaign=extension&utm_content=new_install\"\n        if (isDev) {\n            url = url.replace(\"https://app.getmailtracker.com/\", \"https://mailtracker.ngrok.io/\");\n        }\n        chrome.tabs.create({url});\n    }\n});\nconst ONE_DAY_IN_MILLISECONDS = 24 * 60 * 60 * 1000; // One day in milliseconds\n\nchrome.runtime.onUpdateAvailable.addListener(details => {\n    if (details) {\n        chrome.storage.local.get('lastUpdate', data => {\n            const lastUpdate = data.lastUpdate;\n            const currentDate = new Date().getTime();\n            if (!lastUpdate || currentDate - lastUpdate >= ONE_DAY_IN_MILLISECONDS) {\n                try {\n                    chrome.runtime.reload();\n                    chrome.storage.local.set({ lastUpdate: currentDate });\n                } catch (e) {\n                    console.error(e);\n                }\n            } else {\n                console.log('Maximum one update per day reached');\n            }\n        });\n    }\n});\n\nchrome.runtime.onMessage.addListener(async (message, sender, sendResponse) => {\n    if (message.type == \"setAccount\") {\n        try {\n            const account = message.options.message;\n            if (account.token) {\n                await Account.createAccountEntry(account.email.toLowerCase())\n                for (const key in account) {\n                    await Account.editAccountAttribute(account.email.toLowerCase(), key, account[key]);\n                }\n            }\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    if (message.type == \"applyRules\") {\n        try {\n            const user = message.options.message;\n            console.log(\"applyRules\",user)\n            const rules = [{\n                id: 2,\n                priority: 1,\n                action: {\n                    type: \"block\" as any\n                },\n                condition: {\n                    urlFilter: \"*pixel*user=\" + user.id + \"&end=1*\",\n                    resourceTypes: [\"image\"]\n                }\n            }, {\n                id: 3,\n                priority: 1,\n                action: {\n                    type: \"block\" as any\n                },\n                condition: {\n                    urlFilter: \"*pixel*user=\" + user.id + \"&amp;end=1*\",\n                    resourceTypes: [\"image\"]\n                }\n            }\n            ];\n\n            try {\n                await chrome.declarativeNetRequest.updateDynamicRules({removeRuleIds: [2, 3]});\n            } catch (e) {\n                console.log(e)\n            }\n            await chrome.declarativeNetRequest.updateDynamicRules({addRules: rules} as any);\n            setInterval(async() => {\n                const rules = await chrome.declarativeNetRequest.getDynamicRules()\n                console.log(\"Checking rules \",rules)\n               if(rules.length<2) {\n                   console.log(\"Reapply rules existing \",rules)\n                   await chrome.declarativeNetRequest.updateDynamicRules({addRules: rules} as any);\n               }\n            },60000)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    return true\n});\n"],"names":["chrome","runtime","onMessage","addListener","message","sender","sendResponse","type","tab","scripting","executeScript","target","tabId","id","world","files","Error","onInstalled","object","accounts","Account","getAccountsData","reason","length","isDev","isDevMode","url","replace","tabs","create","ONE_DAY_IN_MILLISECONDS","onUpdateAvailable","details","storage","local","get","data","lastUpdate","currentDate","Date","getTime","reload","set","e","console","error","log","account","options","token","createAccountEntry","email","toLowerCase","key","editAccountAttribute","user","rules","priority","action","condition","urlFilter","resourceTypes","declarativeNetRequest","updateDynamicRules","removeRuleIds","addRules","setInterval","getDynamicRules"],"mappings":"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"}